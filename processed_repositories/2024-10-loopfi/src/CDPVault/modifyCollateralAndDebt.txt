{
    "Function": "modifyCollateralAndDebt",
    "File": "src/CDPVault.sol",
    "Parent Contracts": [
        "src/interfaces/ICDPVault.sol",
        "src/utils/Permission.sol",
        "src/interfaces/IPermission.sol",
        "src/utils/Pause.sol",
        "src/interfaces/IPause.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
    ],
    "High-Level Calls": [
        [
            "safeTransfer",
            "SafeERC20"
        ],
        [
            "toUint256",
            "SafeCast"
        ],
        [
            "lendCreditAccount",
            "IPoolV3"
        ],
        [
            "updateQuotaRevenue",
            "IPoolV3"
        ],
        [
            "calcIncrease",
            "CreditLogic"
        ],
        [
            "safeTransferFrom",
            "SafeERC20"
        ],
        [
            "repayCreditAccount",
            "IPoolV3"
        ]
    ],
    "Internal Calls": [
        "wmul",
        "calcDecrease",
        "calcTotalDebt",
        "spotPrice",
        "toInt256",
        "wmul",
        "abs",
        "hasPermission",
        "_isCollateralized",
        "_calcDebt",
        "_modifyPosition",
        "_requireNotPaused",
        "revert CDPVault__modifyCollateralAndDebt_noPermission()",
        "revert CDPVault__modifyCollateralAndDebt_notSafe()",
        "_calcQuotaRevenueChange"
    ],
    "Library Calls": [
        "toUint256.SafeCast",
        "calcIncrease.CreditLogic",
        "safeTransfer.SafeERC20",
        "safeTransferFrom.SafeERC20"
    ],
    "Low-Level Calls": []
}